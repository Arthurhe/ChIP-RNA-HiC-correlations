#process bed.gz to bedgraph
#peak from ENCODEng used, with ENCODE3 peak files

#downloaded ChIP from ENCODEng
#batch rename files:
cat filenames.csv | while IFS=, read mark fname source id; do cp "${fname}.gz" "../GM12_ENCODEng_${mark}.bed.gz";done

#sorted (abandoned, bedtools sorted coverage has this weird behavior that will lose the chromosome that do not have any B-file match, result in inconsistant tiling file length)

#no-sorting (working properly)
shopt -s extglob
cd /home/ahe/Analysis/201608_HicChipRnaCor/data/ChIPnlike/working_on_bedgz
targetadd="/home/ahe/Analysis/201608_HicChipRnaCor/data/ChIPnlike"
for i in @(GM12|K562)*(RNA|CAGE|DNase|FAIRE|RRBS|H2AZ|H3K27me3|H3K36me3|H3K4me1|H3K4me2|H3K4me3|H3K79me2|H3K9ac|H3K9me3|H4K20me1|EZH2|POLR2A|REST|CTCF|RAD21|CUX1|ZNF384|SPI1|SP1|RCOR1|MAX|HCFC1|CEBPB|JUND|TBP|SRF)*.bed.gz
do i=${i%.*.*}
gunzip -c ${i}.bed.gz > ${targetadd}/bed/${i}.bed
bedtools coverage -a /home/ahe/Analysis/genomeFiles/genome_tiling_1k_hg19.bed -b /home/ahe/Analysis/201608_HicChipRnaCor/data/ChIPnlike/bed/${i}.bed | awk 'BEGIN{OFS="\t";FS="\t"}{print $1,$2,$3,$5,$6/($7+1)}' > ${targetadd}/tiling_files/${i}_hg19_1K_tiling.bed 
done

#check output difference
awk 'BEGIN{OFS="\t";FS="\t"}NR==FNR{exist[$1,$2,$3]=1}NR!=FNR{if(exist[$1,$2,$3]==1){}else{print $1,$2,$3}}' K562_ENCFF341WWD_n_p_SUZ12_hg19_1K_tiling.bed K562_ENCFF477PDQ_n_t_CAGE_hg19_1K_tiling.bed